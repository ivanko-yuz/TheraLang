Vue.component("pagecopy-item",{props:["item"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:"<li class='dd-item' :class='{ expanded: item.isExpanded || item.items.length === 0 }'>  <div class='sitemap-item expanded'>    <div class='link' :class='{ readonly: item.isCopy }'>      <a v-if='!item.isCopy' :href='piranha.baseUrl + \"manager/page/copyrelative/\" + item.id + \"/\" + piranha.pagelist.addPageId + \"/\" + piranha.pagelist.addAfter'>        {{ item.title }}      </a>      <a href='#' v-else>        {{ item.title }}        <span v-if='item.isCopy' class='badge badge-warning'>{{ piranha.resources.texts.copy }}</span>      </a>      <div class='content-blocker'></div>    </div>    <div class='type d-none d-md-block'>      {{ item.typeName }}    </div>  </div>  <ol class='dd-list' v-if='item.items.length > 0' class='dd-list'>    <pagecopy-item v-for='child in item.items' v-bind:key='child.id' v-bind:item='child'>    </page-item>  </ol></li>"}),Vue.component("sitemap-item",{props:["item"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:"<li class='dd-item' :class='{ expanded: item.isExpanded || item.items.length === 0 }' :data-id='item.id'>  <div class='sitemap-item'>    <div class='handle dd-handle'><i class='fas fa-ellipsis-v'></i></div>    <div class='link'>      <span class='actions'>        <a v-if='item.items.length > 0 && item.isExpanded' v-on:click.prevent='toggleItem(item)' class='expand' href='#'><i class='fas fa-minus'></i></a>        <a v-if='item.items.length > 0 && !item.isExpanded' v-on:click.prevent='toggleItem(item)' class='expand' href='#'><i class='fas fa-plus'></i></a>      </span>      <a v-if='piranha.permissions.pages.edit' :href='piranha.baseUrl + item.editUrl + item.id'>        <span v-html='item.title'></span>        <span v-if='item.status' class='badge badge-info'>{{ item.status }}</span>        <span v-if='item.isCopy' class='badge badge-warning'>{{ piranha.resources.texts.copy }}</span>      </a>      <span v-else class='title'>        <span v-html='item.title'></span>        <span v-if='item.status' class='badge badge-info'>{{ item.status }}</span>        <span v-if='item.isCopy' class='badge badge-warning'>{{ piranha.resources.texts.copy }}</span>      </span>    </div>    <div class='type d-none d-md-block'>{{ item.typeName }}</div>    <div class='date d-none d-lg-block'>{{ item.published }}</div>    <div class='actions'>      <a v-if='piranha.permissions.pages.add' href='#' v-on:click.prevent='piranha.pagelist.add(item.siteId, item.id, true)'><i class='fas fa-angle-down'></i></a>      <a v-if='piranha.permissions.pages.add' href='#' v-on:click.prevent='piranha.pagelist.add(item.siteId, item.id, false)'><i class='fas fa-angle-right'></i></a>      <a v-if='piranha.permissions.pages.delete && item.items.length === 0' v-on:click.prevent='piranha.pagelist.remove(item.id)' class='danger' href='#'><i class='fas fa-trash'></i></a>    </div>  </div>  <ol v-if='item.items.length > 0' class='dd-list'>    <sitemap-item v-for='child in item.items' v-bind:key='child.id' v-bind:item='child'>    </sitemap-item>  </ol></li>"}),piranha.pagelist=new Vue({el:"#pagelist",data:{loading:!0,updateBindings:!1,items:[],sites:[],pageTypes:[],addSiteId:null,addSiteTitle:null,addPageId:null,addAfter:!0},methods:{load:function(){var e=this;console.log(piranha.baseUrl+"manager/api/page/list"),piranha.permissions.load(function(){fetch(piranha.baseUrl+"manager/api/page/list").then(function(e){return e.json()}).then(function(i){e.sites=i.sites,e.pageTypes=i.pageTypes,e.updateBindings=!0}).catch(function(e){console.log("error:",e)})})},remove:function(e){var i=this;piranha.alert.open({title:piranha.resources.texts.delete,body:piranha.resources.texts.deletePageConfirm,confirmCss:"btn-danger",confirmIcon:"fas fa-trash",confirmText:piranha.resources.texts.delete,onConfirm:function(){fetch(piranha.baseUrl+"manager/api/page/delete/"+e).then(function(e){return e.json()}).then(function(e){piranha.notifications.push(e),i.load()}).catch(function(e){console.log("error:",e)})}})},bind:function(){var e=this;$(".sitemap-container").each(function(i,a){$(a).nestable({maxDepth:100,group:i,callback:function(i,a){fetch(piranha.baseUrl+"manager/api/page/move",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:$(a).attr("data-id"),items:$(i).nestable("serialize")})}).then(function(e){return e.json()}).then(function(i){piranha.notifications.push(i.status),"success"===i.status.type&&($(".sitemap-container").nestable("destroy"),e.sites=[],Vue.nextTick(function(){e.sites=i.sites,Vue.nextTick(function(){e.bind()})}))}).catch(function(e){console.log("error:",e)})}})})},add:function(e,i,a){var t=this;t.addSiteId=e,t.addPageId=i,t.addAfter=a,t.sites.forEach(function(i){i.id===e&&(t.addSiteTitle=i.title)}),$("#pageAddModal").modal("show")},selectSite:function(e){var i=this;i.addSiteId=e,i.sites.forEach(function(a){a.id===e&&(i.addSiteTitle=a.title)})}},created:function(){},updated:function(){this.updateBindings&&(this.bind(),this.updateBindings=!1),this.loading=!1}});